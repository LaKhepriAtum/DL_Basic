# -*- coding: utf-8 -*-
"""exam02_pandas01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12FyodPpGZJrJh3_Ve_7nzBk-IS_jQb-o

#pandas
"""

import pandas as pd

df = pd.DataFrame([[15, '남자', '영훈중'],
                   [17, '여자', '성암중']],
                   index = ['서준', '도연'],
                   columns=['나이', '성별', '학교'])
df

print(df.index)
print(df.columns)

df.index = ['학생1', '학생2']
df.columns = ['연령', '남녀', '소속']
df

df = df.rename(columns={'연령':'나이'})
df

df = df.rename(index = {'학생1':'서준', '학생2':'도연'})
df

df1 = df['나이']
df1

df2 = df[['나이']]
df2

"""column 이 하나여도 dataFrame으로 묶을 수 있다."""

df2 = df[['나이', '남녀']]
df2

df.iloc[0,0]

df.loc ['서준', '나이']

"""## row 추가"""

df.loc['진석'] = [18, '남자', '신일중']
df

"""## row 삭제"""

df.drop(['진석'], inplace = True)
df

df['키'] = [175, 180]
df['학년'] = [3,2]

df.drop(['학년'], axis = 'columns', inplace= True)
df

df1 = df.drop(['키'], inplace = False, axis = 1)
df1

df = df[['남녀', '소속', '나이', '키']]
df

df.loc['선희'] = ['여자', '풍문중', 14, 175]
df

df.loc['서준', '나이':'키']

df.iloc[:, 2:3]

"""# # index 다루기

"""

exam_data = {'이름':['경석', '연주', '선희'], 
             '수학': [90, 85, 70],
             '영어': [98,88,73], 
             '음악': [90, 87, 88],
             '체육': [88, 79, 67]}
df = pd.DataFrame(exam_data)
df.set_index('이름', inplace=True)
df

df.shape

df.iloc[0, 3] = 97
df

df.loc['경석', '체육'] = 100
df

# df.drop('체욱', axis = 1, inplace = True)
df

df = df.transpose()
df

# ndf1 = df.set_index('음악')
# ndf1

# ndf2 = df.set_index(['음악', '수학'])
# ndf2

# df.loc['선희', '음악']

# ndf1.loc[87]
#
ndf1.iloc[1]

df

ndf3 = df.reset_index()
ndf3

ndf3 = df.reset_index().set_index(['음악'])
ndf3

df

ndf = df.reindex(['경석', '연주', '선희', '덕유', '영림'], fill_value = 0)
ndf

ndf = df.sort_index(ascending=True)
ndf

ndf = df.sort_values(by='영어', ascending=False)
ndf



"""## 연산"""

student1 = pd.Series({'국어':float('NAN'), '영어':90})
student1

percentage = student1/100
percentage

student2 = pd.Series({'영어':50, '국어':40, '수학':80})
student2

student1 + student2

student1.mul(student2, fill_value=1)

df

ndf = df + 100
ndf

ndf - df

"""## 파일 입출력"""

df

df.to_csv('./df_sample.csv')

df = pd.read_csv('./df_sample.csv', index_col = '이름')
# index = 0 도 가능
df

df.to_csv('./df_sample1.csv', index = False)

df.reset_index(inplace=True)

df

df.to_json('./df_sample3.json')

ndf = pd.read_json('./df_sample3.json')
ndf

df.to_excel('./df_sample3.xlsx')

df2 = pd.read_excel('./df_sample3.xlsx', index_col=0)
df2

tables = pd.read_html('https://www.w3schools.com/html/html_tables.asp')
tables

tables[0]

tables[1]

df = pd.read_csv('/content/auto-mpg.csv', names = ['mpg', 'cylinders', 'displacement', 'horespower', 'weight', 'acceleration', 'model year', 'origin', 'name'])
df

df.head()

head = df.head()
head.shape

df.shape

df.info()

df.dtypes

df.mpg.dtypes

df.describe()

df.describe().T

df.describe(include = 'all')

df.count()

unique_value = df['name'].value_counts()
#value_counts, unique 한 값들을 출력
unique_value

unique_value = df['horespower'].value_counts()
type(unique_value)

unique_value.head(40)

df.mean()

df.mpg.mean()

df.std()

df.corr()

